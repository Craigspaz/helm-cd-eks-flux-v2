"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EksjamEksClusterV1Stack = void 0;
const core = require("@aws-cdk/core");
const eks = require("@aws-cdk/aws-eks");
const ec2 = require("@aws-cdk/aws-ec2");
class EksjamEksClusterV1Stack extends core.Stack {
    constructor(scope, id, props) {
        super(scope, id, props);
        //const myVpc = ec2.Vpc.fromLookup(this, 'ImportVPC', {isDefault: false, vpcId: 'vpc-0e7fc4992a33f36e5'});
        const vpc = new ec2.Vpc(this, 'helmcd');
        const cluster = new eks.Cluster(this, 'HelmCD-Cluster', {
            version: eks.KubernetesVersion.V1_21,
            defaultCapacity: 0,
            vpc: vpc,
            vpcSubnets: [{ subnetType: ec2.SubnetType.PRIVATE }]
        });
        cluster.addNodegroupCapacity('helmcd-flux-node-group', {
            instanceTypes: [new ec2.InstanceType('m5.2xlarge')],
            minSize: 1,
            diskSize: 100,
            amiType: eks.NodegroupAmiType.AL2_X86_64,
            maxSize: 1
        });
    }
}
exports.EksjamEksClusterV1Stack = EksjamEksClusterV1Stack;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWtzamFtLWVrcy1jbHVzdGVyLXYxLXN0YWNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZWtzamFtLWVrcy1jbHVzdGVyLXYxLXN0YWNrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLHNDQUFzQztBQUV0Qyx3Q0FBd0M7QUFDeEMsd0NBQXlDO0FBY3pDLE1BQWEsdUJBQXdCLFNBQVEsSUFBSSxDQUFDLEtBQUs7SUFDbkQsWUFBWSxLQUFxQixFQUFFLEVBQVUsRUFBRSxLQUF1QjtRQUNsRSxLQUFLLENBQUMsS0FBSyxFQUFFLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUN4QiwwR0FBMEc7UUFDMUcsTUFBTSxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztRQUV4QyxNQUFNLE9BQU8sR0FBRyxJQUFJLEdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLGdCQUFnQixFQUFFO1lBQ3BELE9BQU8sRUFBRSxHQUFHLENBQUMsaUJBQWlCLENBQUMsS0FBSztZQUNwQyxlQUFlLEVBQUUsQ0FBQztZQUNsQixHQUFHLEVBQUUsR0FBRztZQUNSLFVBQVUsRUFBRSxDQUFDLEVBQUMsVUFBVSxFQUFFLEdBQUcsQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFDLENBQUM7U0FDckQsQ0FBQyxDQUFDO1FBRUgsT0FBTyxDQUFDLG9CQUFvQixDQUFDLHdCQUF3QixFQUFFO1lBQ25ELGFBQWEsRUFBRSxDQUFDLElBQUksR0FBRyxDQUFDLFlBQVksQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUNuRCxPQUFPLEVBQUUsQ0FBQztZQUNWLFFBQVEsRUFBRSxHQUFHO1lBQ2IsT0FBTyxFQUFFLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVO1lBQ3hDLE9BQU8sRUFBRSxDQUFDO1NBQ2IsQ0FBQyxDQUFDO0lBRVAsQ0FBQztDQUNKO0FBdEJELDBEQXNCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5pbXBvcnQgKiBhcyBjb3JlIGZyb20gJ0Bhd3MtY2RrL2NvcmUnO1xuaW1wb3J0ICogYXMgczMgZnJvbSAnQGF3cy1jZGsvYXdzLXMzJztcbmltcG9ydCAqIGFzIGVrcyBmcm9tICdAYXdzLWNkay9hd3MtZWtzJztcbmltcG9ydCBlYzIgPSByZXF1aXJlKCdAYXdzLWNkay9hd3MtZWMyJyk7XG5pbXBvcnQgaWFtID0gcmVxdWlyZSgnQGF3cy1jZGsvYXdzLWlhbScpO1xuaW1wb3J0IGNvZGVidWlsZCA9IHJlcXVpcmUoJ0Bhd3MtY2RrL2F3cy1jb2RlYnVpbGQnKTtcbmltcG9ydCBjb2RlY29tbWl0ID0gcmVxdWlyZSgnQGF3cy1jZGsvYXdzLWNvZGVjb21taXQnKTtcbmltcG9ydCBrZHMgPSByZXF1aXJlKCdAYXdzLWNkay9hd3Mta2luZXNpcycpO1xuaW1wb3J0IGxhbWJkYSA9IHJlcXVpcmUoJ0Bhd3MtY2RrL2F3cy1sYW1iZGEnKTtcbmltcG9ydCB0YXJnZXRzID0gcmVxdWlyZSgnQGF3cy1jZGsvYXdzLWV2ZW50cy10YXJnZXRzJyk7XG4vL2ltcG9ydCB7IE91dHB1dEZpcmVob3NlU3RyZWFtIH0gZnJvbSAnLi9raW5lc2lzLWZpcmVob3NlLXN0cmVhbSc7XG5pbXBvcnQga2RmID0gcmVxdWlyZSgnQGF3cy1jZGsvYXdzLWtpbmVzaXNmaXJlaG9zZScpO1xuLy8gdXNlIG5wbSBpbnN0YWxsICdAYXdzLWNkay9hd3Mta2luZXNpc2ZpcmVob3NlJ1xuLy91c2UgbnBtIHVwZGF0ZSB0byB1cGRhdGUgcGFja2FnZXNcbmltcG9ydCAqIGFzIHlhbWwgZnJvbSAnanMteWFtbCc7XG5cblxuZXhwb3J0IGNsYXNzIEVrc2phbUVrc0NsdXN0ZXJWMVN0YWNrIGV4dGVuZHMgY29yZS5TdGFjayB7XG4gICAgY29uc3RydWN0b3Ioc2NvcGU6IGNvcmUuQ29uc3RydWN0LCBpZDogc3RyaW5nLCBwcm9wcz86IGNvcmUuU3RhY2tQcm9wcykge1xuICAgICAgICBzdXBlcihzY29wZSwgaWQsIHByb3BzKTtcbiAgICAgICAgLy9jb25zdCBteVZwYyA9IGVjMi5WcGMuZnJvbUxvb2t1cCh0aGlzLCAnSW1wb3J0VlBDJywge2lzRGVmYXVsdDogZmFsc2UsIHZwY0lkOiAndnBjLTBlN2ZjNDk5MmEzM2YzNmU1J30pO1xuICAgICAgICBjb25zdCB2cGMgPSBuZXcgZWMyLlZwYyh0aGlzLCAnaGVsbWNkJyk7XG5cbiAgICAgICAgY29uc3QgY2x1c3RlciA9IG5ldyBla3MuQ2x1c3Rlcih0aGlzLCAnSGVsbUNELUNsdXN0ZXInLCB7XG4gICAgICAgICAgICB2ZXJzaW9uOiBla3MuS3ViZXJuZXRlc1ZlcnNpb24uVjFfMjEsXG4gICAgICAgICAgICBkZWZhdWx0Q2FwYWNpdHk6IDAsXG4gICAgICAgICAgICB2cGM6IHZwYyxcbiAgICAgICAgICAgIHZwY1N1Ym5ldHM6IFt7c3VibmV0VHlwZTogZWMyLlN1Ym5ldFR5cGUuUFJJVkFURX1dXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNsdXN0ZXIuYWRkTm9kZWdyb3VwQ2FwYWNpdHkoJ2hlbG1jZC1mbHV4LW5vZGUtZ3JvdXAnLCB7XG4gICAgICAgICAgICBpbnN0YW5jZVR5cGVzOiBbbmV3IGVjMi5JbnN0YW5jZVR5cGUoJ201LjJ4bGFyZ2UnKV0sXG4gICAgICAgICAgICBtaW5TaXplOiAxLFxuICAgICAgICAgICAgZGlza1NpemU6IDEwMCxcbiAgICAgICAgICAgIGFtaVR5cGU6IGVrcy5Ob2RlZ3JvdXBBbWlUeXBlLkFMMl9YODZfNjQsXG4gICAgICAgICAgICBtYXhTaXplOiAxXG4gICAgICAgIH0pO1xuXG4gICAgfVxufVxuIl19